package irisDataExamples;

/**
 * Clustering in WEKA. 
 * 
 * Print n number of instances-clusters given the Iris dataset.
 * 
 * @author feBueno, June 2020
 * fernando.bueno.gutie@gmail.com
 */

import weka.clusterers.ClusterEvaluation;
import weka.clusterers.HierarchicalClusterer;
import weka.clusterers.SimpleKMeans;
import weka.core.ChebyshevDistance;
import weka.core.DistanceFunction;
import weka.core.Instances;
import weka.core.converters.ConverterUtils.DataSource;


public class Clustering {
	public static void main(String[] args) throws Exception{
		DataSource source_DS = new DataSource("src/data/iris.arff");
		Instances data_intances = source_DS.getDataSet();
		
		//hierarchical clustering using the Chebyshev distance resulting in 3 clusters of equal size
		HierarchicalClusterer kmeans = new HierarchicalClusterer();
		kmeans.setNumClusters(3);
		kmeans.setDistanceFunction(new ChebyshevDistance());//Chebyshev distance: The distance between two vectors is the greatest of their differences along any coordinate dimension.
		kmeans.buildClusterer(data_intances);
		
		ClusterEvaluation eval = new ClusterEvaluation();
		eval.setClusterer(kmeans);
		eval.evaluateClusterer(data_intances);
		System.out.println(eval.clusterResultsToString());
	}
} /* Output:
Cluster 0
((((((((((((((((((((0.0:0.02778,0.0:0.02778):0.01389,((0.0:0.02778,0.0:0.02778):0,0.0:0.02778):0.01389):0,(0.0:0.02778,0.0:0.02778):0.01389):0,0.0:0.04167):0,0.0:0.04167):0,0.0:0.04167):0,(0.0:0.04167,0.0:0.04167):0):0.00918,(((((0.0:0.0339,0.0:0.0339):0.00777,0.0:0.04167):0,0.0:0.04167):0,(((0.0:0,0.0:0):0,0.0:0):0.04167,0.0:0.04167):0):0,(((0.0:0.02778,0.0:0.02778):0.00612,0.0:0.0339):0.00777,0.0:0.04167):0):0.00918):0.00471,(0.0:0.04167,(0.0:0.04167,0.0:0.04167):0):0.01389):0,0.0:0.05556):0,0.0:0.05556):0,(0.0:0.05556,(0.0:0.05085,0.0:0.05085):0.00471):0):0.01224,0.0:0.0678):0.01554,(((0.0:0.02778,0.0:0.02778):0.02778,((0.0:0.04167,0.0:0.04167):0,0.0:0.04167):0.01389):0.01224,0.0:0.0678):0.01554):0,0.0:0.08333):0,((0.0:0.0678,0.0:0.0678):0.01554,0.0:0.08333):0):0,0.0:0.08333):0,0.0:0.08333):0.00141,((0.0:0.08333,(0.0:0.08333,0.0:0.08333):0):0,0.0:0.08333):0.00141):0.16525,0.0:0.25)

Cluster 1
(((((((((((((((((((((1.0:0.04167,1.0:0.04167):0.01389,(((1.0:0.04167,(1.0:0.04167,1.0:0.04167):0):0.00918,1.0:0.05085):0.00471,1.0:0.05556):0):0,((1.0:0.05085,((1.0:0.04167,(1.0:0.04167,1.0:0.04167):0):0.00918,1.0:0.05085):0):0,1.0:0.05085):0.00471):0,1.0:0.05556):0.01224,1.0:0.0678):0.01554,(1.0:0.04167,1.0:0.04167):0.04167):0,1.0:0.08333):0,(((((1.0:0.05085,((((1.0:0.04167,1.0:0.04167):0,(1.0:0.04167,(1.0:0.04167,1.0:0.04167):0):0):0,1.0:0.04167):0,(1.0:0.04167,1.0:0.04167):0):0.00918):0.00471,(1.0:0.04167,(1.0:0.04167,1.0:0.04167):0):0.01389):0.01224,1.0:0.0678):0,1.0:0.0678):0.01554,1.0:0.08333):0):0,1.0:0.08333):0,1.0:0.08333):0,1.0:0.08333):0,1.0:0.08333):0,1.0:0.08333):0,(1.0:0.05556,1.0:0.05556):0.02778):0,1.0:0.08333):0,1.0:0.08333):0,1.0:0.08333):0.00141,(1.0:0.08333,1.0:0.08333):0.00141):0.0339,((1.0:0.04167,1.0:0.04167):0.01389,1.0:0.05556):0.06309):0.00636,1.0:0.125):0,1.0:0.125)

Cluster 2
((((((((((((((((((((2.0:0.0678,(2.0:0.04167,2.0:0.04167):0.02613):0.01554,2.0:0.08333):0,((2.0:0.08333,(((2.0:0.0339,2.0:0.0339):0.01695,2.0:0.05085):0.01695,(2.0:0.05556,2.0:0.05556):0.01224):0.01554):0,2.0:0.08333):0):0,(2.0:0.08333,((2.0:0.04167,2.0:0.04167):0.04167,2.0:0.08333):0):0):0,((((2.0:0.05556,(2.0:0.04167,2.0:0.04167):0.01389):0.02778,(2.0:0.0678,(2.0:0.04167,2.0:0.04167):0.02613):0.01554):0,2.0:0.08333):0,2.0:0.08333):0):0,(2.0:0.04167,2.0:0.04167):0.04167):0,2.0:0.08333):0,((2.0:0.02778,2.0:0.02778):0.02307,2.0:0.05085):0.03249):0,(((2.0:0,2.0:0):0.05556,2.0:0.05556):0.02778,2.0:0.08333):0):0,(2.0:0.04167,2.0:0.04167):0.04167):0.00141,(2.0:0.08333,2.0:0.08333):0.00141):0,2.0:0.08475):0,(2.0:0.08333,2.0:0.08333):0.00141):0,2.0:0.08475):0.04025,2.0:0.125):0,(2.0:0.08475,2.0:0.08475):0.04025):0.01389,(2.0:0.13889,(2.0:0.08333,2.0:0.08333):0.05556):0):0.02778,2.0:0.16667):0,2.0:0.16667):0.02778,2.0:0.19444)

Clustered Instances

0       50 ( 33%)
1       50 ( 33%)
2       50 ( 33%)
*/
